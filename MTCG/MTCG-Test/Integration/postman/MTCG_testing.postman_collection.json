{
	"info": {
		"_postman_id": "16f71971-c45e-455f-a4c2-1c5569054632",
		"name": "MTCG testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Users",
			"item": [
				{
					"name": "Add Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"admin-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"admin\",\r\n    \"Password\": \"istrator\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"kienboec-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"kienboec\",\r\n    \"Password\": \"daniel\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"altenhof-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"altenhof\",\r\n    \"Password\": \"markus\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User Duplicate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"kienboec\",\r\n    \"Password\": \"daniel\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User Duplicate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"kienboec\",\r\n    \"Password\": \"different\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add Packages",
			"item": [
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Id\":\"845f0dc7-37d0-426e-994e-43fc3ac83c08\", \"Name\":\"WaterGoblin\", \"Damage\": 10.0}, \r\n    {\"Id\":\"99f8f8dc-e25e-4a95-aa2c-782823f36e2a\", \"Name\":\"Dragon\", \"Damage\": 50.0},\r\n    {\"Id\":\"e85e3976-7c86-4d06-9a80-641c2019a79f\", \"Name\":\"WaterSpell\", \"Damage\": 20.0}, \r\n    {\"Id\":\"1cb6ab86-bdb2-47e5-b6e4-68c5ab389334\", \"Name\":\"Ork\", \"Damage\": 45.0},\r\n    {\"Id\":\"dfdd758f-649c-40f9-ba3a-8657f4b3439f\", \"Name\":\"FireSpell\", \"Damage\": 25.0}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic admin-mtcgToken",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"644808c2-f87a-4600-b313-122b02322fd5\", \"Name\":\"WaterGoblin\",\r\n\"Damage\": 9.0}, {\"Id\":\"4a2757d6-b1c3-47ac-b9a3-91deab093531\",\r\n\"Name\":\"Dragon\", \"Damage\": 55.0}, {\"Id\":\"91a6471b-1426-43f6-ad65-6fc473e16f9f\", \"Name\":\"WaterSpell\", \"Damage\": 21.0}, {\"Id\":\"4ec8b269-0dfa-4f97-809a-2c63fe2a0025\", \"Name\":\"Ork\", \"Damage\": 55.0},\r\n{\"Id\":\"f8043c23-1534-4487-b66b-238e0c3c39b5\", \"Name\":\"WaterSpell\",\r\n\"Damage\": 23.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"b017ee50-1c14-44e2-bfd6-2c0c5653a37c\", \"Name\":\"WaterGoblin\",\r\n\"Damage\": 11.0}, {\"Id\":\"d04b736a-e874-4137-b191-638e0ff3b4e7\",\r\n\"Name\":\"Dragon\", \"Damage\": 70.0}, {\"Id\":\"88221cfe-1f84-41b9-8152-8e36c6a354de\", \"Name\":\"WaterSpell\", \"Damage\": 22.0}, {\"Id\":\"1d3f175bc067-4359-989d-96562bfa382c\", \"Name\":\"Ork\", \"Damage\": 40.0},\r\n{\"Id\":\"171f6076-4eb5-4a7d-b3f2-2d650cc3d237\", \"Name\":\"RegularSpell\",\r\n\"Damage\": 28.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"ed1dc1bc-f0aa-4a0c-8d43-1402189b33c8\", \"Name\":\"WaterGoblin\",\r\n\"Damage\": 10.0}, {\"Id\":\"65ff5f23-1e70-4b79-b3bd-f6eb679dd3b5\",\r\n\"Name\":\"Dragon\", \"Damage\": 50.0}, {\"Id\":\"55ef46c4-016c-4168-bc43-6b9b1e86414f\", \"Name\":\"WaterSpell\", \"Damage\": 20.0}, {\"Id\":\"f3fad0f2-a1af-45df-b80d-2e48825773d9\", \"Name\":\"Ork\", \"Damage\": 45.0},\r\n{\"Id\":\"8c20639d-6400-4534-bd0f-ae563f11f57a\", \"Name\":\"WaterSpell\",\r\n\"Damage\": 25.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"d7d0cb94-2cbf-4f97-8ccf-9933dc5354b8\", \"Name\":\"WaterGoblin\", \"Damage\":  9.0}, {\"Id\":\"44c82fbc-ef6d-44ab-8c7a-9fb19a0e7c6e\", \"Name\":\"Dragon\", \"Damage\": 55.0}, {\"Id\":\"2c98cd06-518b-464c-b911-8d787216cddd\", \"Name\":\"WaterSpell\", \"Damage\": 21.0}, {\"Id\":\"951e886a-0fbf-425d-8df5-af2ee4830d85\", \"Name\":\"Ork\", \"Damage\": 55.0}, {\"Id\":\"dcd93250-25a7-4dca-85da-cad2789f7198\", \"Name\":\"FireSpell\",    \"Damage\": 23.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"b2237eca-0271-43bd-87f6-b22f70d42ca4\", \"Name\":\"WaterGoblin\", \"Damage\": 11.0}, {\"Id\":\"9e8238a4-8a7a-487f-9f7d-a8c97899eb48\", \"Name\":\"Dragon\", \"Damage\": 70.0}, {\"Id\":\"d60e23cf-2238-4d49-844f-c7589ee5342e\", \"Name\":\"WaterSpell\", \"Damage\": 22.0}, {\"Id\":\"fc305a7a-36f7-4d30-ad27-462ca0445649\", \"Name\":\"Ork\", \"Damage\": 40.0}, {\"Id\":\"84d276ee-21ec-4171-a509-c1b88162831c\", \"Name\":\"RegularSpell\", \"Damage\": 28.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"admin-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"admin\",\r\n    \"Password\": \"istrator\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"kienboec-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"kienboec\",\r\n    \"Password\": \"daniel\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"altenhof-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"altenhof\",\r\n    \"Password\": \"markus\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login Fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"kienboec\",\r\n    \"Password\": \"different\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Acquire Packages",
			"item": [
				{
					"name": "Acquire Package kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package kienboec FAIL No Coins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package altenhof Fail No Packages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"67f9048f-99b8-4ae4-b866-d8008d00c53d\", \"Name\":\"WaterGoblin\", \"Damage\": 10.0}, {\"Id\":\"aa9999a0-734c-49c6-8f4a-651864b14e62\", \"Name\":\"RegularSpell\", \"Damage\": 50.0}, {\"Id\":\"d6e9c720-9b5a-40c7-a6b2-bc34752e3463\", \"Name\":\"Knight\", \"Damage\": 20.0}, {\"Id\":\"02a9c76e-b17d-427f-9240-2dd49b0d3bfd\", \"Name\":\"RegularSpell\", \"Damage\": 45.0}, {\"Id\":\"2508bf5c-20d7-43b4-8c77-bc677decadef\", \"Name\":\"FireElf\", \"Damage\": 25.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"70962948-2bf7-44a9-9ded-8c68eeac7793\", \"Name\":\"WaterGoblin\", \"Damage\":  9.0}, {\"Id\":\"74635fae-8ad3-4295-9139-320ab89c2844\", \"Name\":\"FireSpell\", \"Damage\": 55.0}, {\"Id\":\"ce6bcaee-47e1-4011-a49e-5a4d7d4245f3\", \"Name\":\"Knight\", \"Damage\": 21.0}, {\"Id\":\"a6fde738-c65a-4b10-b400-6fef0fdb28ba\", \"Name\":\"FireSpell\", \"Damage\": 55.0}, {\"Id\":\"a1618f1e-4f4c-4e09-9647-87e16f1edd2d\", \"Name\":\"FireElf\", \"Damage\": 23.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"2272ba48-6662-404d-a9a1-41a9bed316d9\", \"Name\":\"WaterGoblin\", \"Damage\": 11.0}, {\"Id\":\"3871d45b-b630-4a0d-8bc6-a5fc56b6a043\", \"Name\":\"Dragon\", \"Damage\": 70.0}, {\"Id\":\"166c1fd5-4dcb-41a8-91cb-f45dcd57cef3\", \"Name\":\"Knight\", \"Damage\": 22.0}, {\"Id\":\"237dbaef-49e3-4c23-b64b-abf5c087b276\", \"Name\":\"WaterSpell\", \"Damage\": 40.0}, {\"Id\":\"27051a20-8580-43ff-a473-e986b52f297a\", \"Name\":\"FireElf\", \"Damage\": 28.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package altenhof Fail No Coins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "Get Cards kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.cards).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cards",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards Fail No Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cards",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.cards).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cards",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cards"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deck",
			"item": [
				{
					"name": "Configure deck kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic kienboec-mtcgToken",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"845f0dc7-37d0-426e-994e-43fc3ac83c08\", \"99f8f8dc-e25e-4a95-aa2c-782823f36e2a\", \"e85e3976-7c86-4d06-9a80-641c2019a79f\", \"171f6076-4eb5-4a7d-b3f2-2d650cc3d237\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic kienboec-mtcgToken",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure deck altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"aa9999a0-734c-49c6-8f4a-651864b14e62\", \"d6e9c720-9b5a-40c7-a6b2-bc34752e3463\", \"d60e23cf-2238-4d49-844f-c7589ee5342e\", \"02a9c76e-b17d-427f-9240-2dd49b0d3bfd\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure deck altenhof Fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"845f0dc7-37d0-426e-994e-43fc3ac83c08\", \"99f8f8dc-e25e-4a95-aa2c-782823f36e2a\", \"e85e3976-7c86-4d06-9a80-641c2019a79f\", \"171f6076-4eb5-4a7d-b3f2-2d650cc3d237\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure deck altenhof Fail Only 3 Cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"aa9999a0-734c-49c6-8f4a-651864b14e62\", \"d6e9c720-9b5a-40c7-a6b2-bc34752e3463\", \"d60e23cf-2238-4d49-844f-c7589ee5342e\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.deck).length ).to.eql(4);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.deck).length ).to.eql(4);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck kienboec Plain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"Id\");\r",
									"    pm.expect(response).to.contain(\"Name\");\r",
									"    pm.expect(response).to.contain(\"Damage\");\r",
									"    pm.expect(response).to.contain(\"845f0dc7-37d0-426e-994e-43fc3ac83c08\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck?format=plain",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							],
							"query": [
								{
									"key": "format",
									"value": "plain"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck altenhof Plain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"Id\");\r",
									"    pm.expect(response).to.contain(\"Name\");\r",
									"    pm.expect(response).to.contain(\"Damage\");\r",
									"    pm.expect(response).to.contain(\"d60e23cf-2238-4d49-844f-c7589ee5342e\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck?format=plain",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							],
							"query": [
								{
									"key": "format",
									"value": "plain"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Data",
			"item": [
				{
					"name": "Get User Data kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Username\"]).to.contain(\"kienboec\");\r",
									"    pm.expect(response[\"Realname\"]).to.contain(\"No name given\");\r",
									"    pm.expect(response[\"Bio\"]).to.contain(\"No Bio\");\r",
									"    pm.expect(response[\"Image\"]).to.contain(\"No Image\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/kienboec",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"kienboec"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Data altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Username\"]).to.contain(\"altenhof\");\r",
									"    pm.expect(response[\"Realname\"]).to.contain(\"No name given\");\r",
									"    pm.expect(response[\"Bio\"]).to.contain(\"No Bio\");\r",
									"    pm.expect(response[\"Image\"]).to.contain(\"No Image\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/altenhof",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"altenhof"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Data kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Username\"]).to.contain(\"kienboec\");\r",
									"    pm.expect(response[\"Realname\"]).to.contain(\"Kienboeck\");\r",
									"    pm.expect(response[\"Bio\"]).to.contain(\"me playin...\");\r",
									"    pm.expect(response[\"Image\"]).to.contain(\":-)\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Kienboeck\",  \"Bio\": \"me playin...\", \"Image\": \":-)\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/kienboec",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"kienboec"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Data altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Username\"]).to.contain(\"altenhof\");\r",
									"    pm.expect(response[\"Realname\"]).to.contain(\"Altenhofer\");\r",
									"    pm.expect(response[\"Bio\"]).to.contain(\"me codin...\");\r",
									"    pm.expect(response[\"Image\"]).to.contain(\":-D\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Altenhofer\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/altenhof",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"altenhof"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Data kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Username\"]).to.contain(\"kienboec\");\r",
									"    pm.expect(response[\"Realname\"]).to.contain(\"Kienboeck\");\r",
									"    pm.expect(response[\"Bio\"]).to.contain(\"me playin...\");\r",
									"    pm.expect(response[\"Image\"]).to.contain(\":-)\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/kienboec",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"kienboec"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Data altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Username\"]).to.contain(\"altenhof\");\r",
									"    pm.expect(response[\"Realname\"]).to.contain(\"Altenhofer\");\r",
									"    pm.expect(response[\"Bio\"]).to.contain(\"me codin...\");\r",
									"    pm.expect(response[\"Image\"]).to.contain(\":-D\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/altenhof",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"altenhof"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Data kienboeck Fail Wrong Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/kienboec",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"kienboec"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Data altenhof Fail Wrong Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/altenhof",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"altenhof"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Data kienboec Fail Wrong token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Hoax\",  \"Bio\": \"me playin...\", \"Image\": \":-)\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/kienboec",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"kienboec"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Data altenhof Fail Wrong Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Hoax\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/altenhof",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"altenhof"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Data Fail Wrong Url",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/someGuy",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"someGuy"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stats",
			"item": [
				{
					"name": "Get User Stats kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Elo\"]).to.eql(1000);\r",
									"    pm.expect(response[\"Wins\"]).to.eql(0);\r",
									"    pm.expect(response[\"Looses\"]).to.eql(0);\r",
									"    pm.expect(response[\"Draws\"]).to.eql(0);\r",
									"    pm.expect(response[\"Total Games Played\"]).to.eql(0);\r",
									"    pm.expect(response[\"Coins\"]).to.eql(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Altenhofer\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/stats",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Stats altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Elo\"]).to.eql(1000);\r",
									"    pm.expect(response[\"Wins\"]).to.eql(0);\r",
									"    pm.expect(response[\"Looses\"]).to.eql(0);\r",
									"    pm.expect(response[\"Draws\"]).to.eql(0);\r",
									"    pm.expect(response[\"Total Games Played\"]).to.eql(0);\r",
									"    pm.expect(response[\"Coins\"]).to.eql(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Altenhofer\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/stats",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Battle",
			"item": [
				{
					"name": "Battle",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// See: https://stackoverflow.com/a/53830635/12347616\r",
									"pm.sendRequest({\r",
									"    url: \"http://localhost:8080/battles\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Authorization': 'Basic altenhof-mtcgToken',\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    //const response = res.json();\r",
									"    //pm.expect(response[\"result\"]).to.not.be.NaN;\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: \"http://localhost:8080/battles\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Authorization': 'Basic kienboec-mtcgToken',\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    //const response = res.json();\r",
									"    //pm.expect(response[\"result\"]).to.not.be.NaN;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic admin-mtcgToken",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/battles/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"battles",
								"0"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stats",
			"item": [
				{
					"name": "Get User Stats kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Total Games Played\"]).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Altenhofer\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/stats",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Stats altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"Total Games Played\"]).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Altenhofer\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/stats",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Scoreboard",
			"item": [
				{
					"name": "Get Scoreboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"scoreboard\"]).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Altenhofer\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/score",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"score"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Trading",
			"item": [
				{
					"name": "Get Trading Deals kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic kienboec-mtcgToken",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Trading Deal kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic kienboec-mtcgToken",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Id\": \"6cd85277-4590-49d4-b0cf-ba0a921faad0\", \"CardToTrade\": \"1cb6ab86-bdb2-47e5-b6e4-68c5ab389334\", \"Type\": \"monster\", \"MinimumDamage\": 15}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trading Deals kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trading Deals altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Trading Deal kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings/6cd85277-4590-49d4-b0cf-ba0a921faad0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings",
								"6cd85277-4590-49d4-b0cf-ba0a921faad0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trading Deals kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Trading Deal kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic kienboec-mtcgToken",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Id\": \"6cd85277-4590-49d4-b0cf-ba0a921faad0\", \"CardToTrade\": \"1cb6ab86-bdb2-47e5-b6e4-68c5ab389334\", \"Type\": \"monster\", \"MinimumDamage\": 15}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trading Deals kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trading Deals altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trade kienboec Fail Oneself",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic kienboec-mtcgToken",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"4ec8b269-0dfa-4f97-809a-2c63fe2a0025\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tradings/6cd85277-4590-49d4-b0cf-ba0a921faad0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings",
								"6cd85277-4590-49d4-b0cf-ba0a921faad0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trade altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic altenhof-mtcgToken",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"951e886a-0fbf-425d-8df5-af2ee4830d85\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tradings/6cd85277-4590-49d4-b0cf-ba0a921faad0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings",
								"6cd85277-4590-49d4-b0cf-ba0a921faad0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trading Deals kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trading Deals altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.tradings).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.tradings).length ).to.eql(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/tradings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tradings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "*Bonus* Battle History",
			"item": [
				{
					"name": "Get Battles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.battles).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.battles).length ).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic admin-mtcgToken",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/battles/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"battles",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Battle Log",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.result).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/battle/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"battle",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}