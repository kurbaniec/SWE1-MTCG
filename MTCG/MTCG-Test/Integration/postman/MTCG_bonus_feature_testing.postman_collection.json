{
	"info": {
		"_postman_id": "8b73466e-c858-48d8-a474-fa7ade6e8f31",
		"name": "MTCG bonus feature testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Users",
			"item": [
				{
					"name": "Add Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"admin-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"admin\",\r\n    \"Password\": \"istrator\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"kienboec-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"kienboec\",\r\n    \"Password\": \"daniel\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"altenhof-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"altenhof\",\r\n    \"Password\": \"markus\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"admin-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"admin\",\r\n    \"Password\": \"istrator\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"kienboec-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"kienboec\",\r\n    \"Password\": \"daniel\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.text();\r",
									"    pm.expect(response).to.contain(\"altenhof-mtcgToken\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"altenhof\",\r\n    \"Password\": \"markus\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add Packages",
			"item": [
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"space1\", \"Name\":\"SpaceMarine\", \"Damage\": 10.0}, {\"Id\":\"space2\", \"Name\":\"SpaceMarine\", \"Damage\": 12.0}, {\"Id\":\"space3\", \"Name\":\"SpaceMarine\", \"Damage\": 14.0}, {\"Id\":\"space4\", \"Name\":\"SpaceMarine\", \"Damage\": 16.0}, {\"Id\":\"space5\", \"Name\":\"SpaceMarine\",    \"Damage\": 18.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\"Id\":\"ork1\", \"Name\":\"Ork\", \"Damage\": 10.0}, {\"Id\":\"ork2\", \"Name\":\"Ork\", \"Damage\": 12.0}, {\"Id\":\"ork3\", \"Name\":\"Ork\", \"Damage\": 14.0}, {\"Id\":\"ork4\", \"Name\":\"Ork\", \"Damage\": 16.0}, {\"Id\":\"ork5\", \"Name\":\"Ork\",    \"Damage\": 18.0}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"packages"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Acquires Packages",
			"item": [
				{
					"name": "Acquire Package kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Package altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/transactions/packages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"transactions",
								"packages"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deck",
			"item": [
				{
					"name": "Configure deck kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic kienboec-mtcgToken",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"space1\", \"space2\", \"space3\", \"space4\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck kienboec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.deck).length ).to.eql(4);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure deck altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"ork1\", \"ork2\", \"ork3\", \"ork4\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deck altenhof",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.deck).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic altenhof-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/deck",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deck"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Battle",
			"item": [
				{
					"name": "Battle",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// See: https://stackoverflow.com/a/53830635/12347616\r",
									"pm.sendRequest({\r",
									"    url: \"http://localhost:8080/battles\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Authorization': 'Basic altenhof-mtcgToken',\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    //const response = res.json();\r",
									"    //pm.expect(response[\"result\"]).to.not.be.NaN;\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: \"http://localhost:8080/battles\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Authorization': 'Basic kienboec-mtcgToken',\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    //const response = res.json();\r",
									"    //pm.expect(response[\"result\"]).to.not.be.NaN;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic admin-mtcgToken",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/battles/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"battles",
								"0"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Scoreboard",
			"item": [
				{
					"name": "Get Scoreboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response[\"scoreboard\"]).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic kienboec-mtcgToken"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"Name\": \"Altenhofer\", \"Bio\": \"me codin...\",  \"Image\": \":-D\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/score",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"score"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "*Bonus* Battle History",
			"item": [
				{
					"name": "Get Battles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.battles).to.not.be.NaN;\r",
									"    pm.expect(Object.keys (response.battles).length ).to.eql(1);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic admin-mtcgToken",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/battles/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"battles",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Battle Log",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Payload test\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.result).to.not.be.NaN;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic admin-mtcgToken"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/battle/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"battle",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}